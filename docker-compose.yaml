version: "3.7"
services:
  # MLFlow
  mlflow:
    restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: mlflow
    env_file:
      - ./.env
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - postgresql
      - minio
    ports:
        - "5000:5000"
    command: >
      mlflow server
        --backend-store-uri postgresql+psycopg2://postgre:postgre@postgresql:5432/mlflow-db
        --default-artifact-root s3://default/
        --host 0.0.0.0
        --port 5000
  postgresql:
    image: postgres
    container_name: postgresql
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgre
      POSTGRES_PASSWORD: postgre
      POSTGRES_DB: mlflow-db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgresql
    restart: always
  minio:
    image: quay.io/minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    command: server /export --console-address ":9001"
  defaultbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD})
      do echo 'try to create buckets...' && sleep 1; done;
      /usr/bin/mc mb myminio/default;
      /usr/bin/mc policy download myminio/default;
      exit 0;
      "
